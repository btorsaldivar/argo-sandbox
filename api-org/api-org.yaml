###############
## NAMESPACE ##
###############
apiVersion: v1
kind: Namespace
metadata:
  name: api-org
---
################
## DEPLOYMENT ##
################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-org
  namespace: api-org
  labels:
    azure.workload.identity/use: "true"
spec:
  #replicas: 2
  selector:
    matchLabels:
      app: api-org
  template:
    metadata:
      labels:
        app: api-org
    spec:
      serviceAccountName: workload-identity-sa          # Workload Identity Service Account Name
      containers:
      - name: api-org
        image: btoacrsea.azurecr.io/app/api-org:2023.05.11.1-main
        #image: btoacrsea.azurecr.io/app/api-org:2023.03.31.10-main
        imagePullPolicy: Always

  #      env:
  #        - name: KEYVAULT_URL
  #          value: https://k8svaultci.vault.azure.net/
  #        - name: TLSCSI
  #          value: btotest-com

        ports:
        - containerPort: 80
          name: http-pod
          protocol: TCP

        livenessProbe:
          httpGet:
            path: /ping
            port: http-pod        # See value in ports.containerPort
          failureThreshold: 1
          periodSeconds: 10

        startupProbe:
          httpGet:
            path: /version
            port: http-pod        # See value in ports.containerPort
          failureThreshold: 20
          periodSeconds: 10
          initialDelaySeconds: 10

        resources:
        #  limits:
        #    cpu: 200m
        #    memory: 100Mi
          requests:
            cpu: 50m
        #    memory: 50Mi

#        volumeMounts:
#        - name: secrets-store-inline
#          mountPath: "/mnt/secrets-store"
#          readOnly: true

#      volumes:
#      - name: secrets-store-inline
#        csi:
#          driver: secrets-store.csi.k8s.io
#          readOnly: true
#          volumeAttributes:
#            secretProviderClass: "azure-tls"

      tolerations:
        #- key: "kubernetes.azure.com/scalesetpriority"
        #  operator: "Exists"
        #  effect: "NoSchedule"
        - operator: "Exists"        

      affinity:
      # An example of preferred pod anti-affinity, weight is in the range 1-100
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - api-org
#                - key: app.kubernetes.io/instance
#                  operator: In
#                  values:
#                  - ingress-nginx
#                - key: app.kubernetes.io/component
#                  operator: In
#                  values:
#                  - controller
              topologyKey: pod-template-hash
---
#############
## SERVICE ##
#############
apiVersion: v1
kind: Service
metadata:
  name: api-org-service
  namespace: api-org
spec:
  type: ClusterIP
  selector:
    app: api-org
  sessionAffinity: None
  ports:
    - name: http-service
      port: 80
      targetPort: http-pod
      protocol: TCP
#spec:
#  type: ExternalName
#  externalName: api-org-service.api-org.svc.cluster.local

---
#####################
## SERVICE ACCOUNT ##
#####################
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    # azure.workload.identity/client-id: 649bfd71-e440-437f-bce3-2c88386190a0        # ci-k8s-aks
    # azure.workload.identity/tenant-id                           # Default: AZURE_TENANT_ID environment variable extracted from azure-wi-webhook-config ConfigMap.
    # azure.workload.identity/service-account-token-expiration    # Default: 3600. Supported range is 3600-86400.
  labels:
    azure.workload.identity/use: "true"
  name: workload-identity-sa
  namespace: api-org
---
###########################
## SECRET PROVIDER CLASS ##
###########################
#apiVersion: secrets-store.csi.x-k8s.io/v1
#kind: SecretProviderClass
#metadata:
#  name: azure-tls
#  namespace: api-org
#spec:
#  provider: azure
#  secretObjects:                            # secretObjects defines the desired state of synced K8s secret objects
#  - secretName: ingress-tls-csi
#    type: kubernetes.io/tls
#    data: 
#    - objectName: btotest-com
#      key: tls.key
#    - objectName: btotest-com
#      key: tls.crt
#  parameters:
#    usePodIdentity: "false"
#    useVMManagedIdentity: "false"
#    #userAssignedIdentityID: <client id>
#    #userAssignedIdentityID: "70a8784f-e0ca-4f90-a8c8-c2782d00f53d"
#    #clientID: 70a8784f-e0ca-4f90-a8c8-c2782d00f53d       # ci-k8s-kubelet, use workload-identity credential
#    clientID: 649bfd71-e440-437f-bce3-2c88386190a0        # ci-k8s-aks, use workload-identity credential
#    keyvaultName: k8svaultci                              # Name of the key vault instance
#    objects: |
#      array:
#        - |
#          objectName: btotest-com
#          objectType: secret
#    tenantId: bf5991a1-f344-4aec-9fb3-455ff1e2c7a6        # The tenant ID of the key vault
---
#############
## INGRESS ##
#############
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-org
  namespace: api-org
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    #nginx.ingress.kubernetes.io/use-regex: "true"
    #nginx.ingress.kubernetes.io/rewrite-target: /$1
    #nginx.ingress.kubernetes.io/rewrite-target: /
#spec:
#  rules:
#  #- host: "*.foo.com"
#  #-  http:
#  - host: "ingress-api-org.btotest.com"
#    http:
#      paths:
#      #- pathType: Prefix
#      - pathType: ImplementationSpecific
#        path: "/"
#        backend:
#          service:
#            name: api-org-service
#            port:
#              number: 80
spec:
  #ingressClassName: nginx
  tls:
  - hosts:
    - ingress-api-org.btotest.com
  #  secretName: ingress-tls-csi
  rules:
  - host: ingress-api-org.btotest.com
    http:
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: api-org-service
            port:
              number: 80
---
####################################
## HPA: Horizontal Pod Autoscaler ##
####################################
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: api-org-hpa
  namespace: api-org
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api-org
  minReplicas: 4
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 90
  #- type: Pods
  #  pods:
  #    metric:
  #      name: packets-per-second
  #    target:
  #      type: AverageValue
  #      averageValue: 1k
  #- type: Object
  #  object:
  #    metric:
  #      name: requests-per-second
  #    describedObject:
  #      apiVersion: networking.k8s.io/v1
  #      kind: Ingress
  #      name: main-route
  #    target:
  #      type: Value
  #      value: 10k     