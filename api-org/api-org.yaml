###############
## NAMESPACE ##
###############
apiVersion: v1
kind: Namespace
metadata:
  name: api-org
---
################
## DEPLOYMENT ##
################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-org
  namespace: api-org
spec:
  #replicas: 2
  selector:
    matchLabels:
      app: api-org
  template:
    metadata:
      labels:
        app: api-org
    spec:
      containers:
      - name: api-org
        image: btoacrsea.azurecr.io/app/api-org:2023.05.09.10-main
        #image: btoacrsea.azurecr.io/app/api-org:2023.03.31.10-main
        imagePullPolicy: Always

        ports:
        - containerPort: 80
          name: http-pod
          protocol: TCP

        livenessProbe:
          httpGet:
            path: /ping
            port: http-pod        # See value in ports.containerPort
          failureThreshold: 1
          periodSeconds: 10

        startupProbe:
          httpGet:
            path: /version
            port: http-pod        # See value in ports.containerPort
          failureThreshold: 20
          periodSeconds: 10
          initialDelaySeconds: 10

        resources:
        #  limits:
        #    cpu: 200m
        #    memory: 100Mi
          requests:
            cpu: 50m
        #    memory: 50Mi

        volumeMounts:
        - name: secrets-store-inline
          mountPath: "/mnt/secrets-store"
          readOnly: true

      volumes:
      - name: secrets-store-inline
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: "azure-tls"

      tolerations:
        - key: "kubernetes.azure.com/scalesetpriority"
          operator: "Exists"
          effect: "NoSchedule"
---
#############
## SERVICE ##
#############
apiVersion: v1
kind: Service
metadata:
  name: api-org-service
  namespace: api-org
spec:
  type: ClusterIP
  ports:
    - name: http-service
      port: 80
      targetPort: http-pod
      protocol: TCP
  selector:
    app: api-org
  sessionAffinity: None
#---
###########################
## SECRET PROVIDER CLASS ##
###########################
#apiVersion: secrets-store.csi.x-k8s.io/v1
#kind: SecretProviderClass
#metadata:
#  name: azure-tls
#  namespace: api-org
#spec:
#  provider: azure
#  secretObjects:                            # secretObjects defines the desired state of synced K8s secret objects
#  - secretName: ingress-tls-csi
#    type: kubernetes.io/tls
#    data: 
#    - objectName: btotest-com
#      key: tls.key
#    - objectName: btotest-com
#      key: tls.crt
#  parameters:
#    usePodIdentity: "false"
#    useVMManagedIdentity: "false"
#    #userAssignedIdentityID: <client id>
#    userAssignedIdentityID: "b23166db-cc45-4c5f-8f5b-4a7c8d920132"
#    keyvaultName: k8svaultci                 # the name of the AKV instance
#    objects: |
#      array:
#        - |
#          objectName: btotest-com
#          objectType: secret
#    tenantId: bf5991a1-f344-4aec-9fb3-455ff1e2c7a6
---
#############
## INGRESS ##
#############
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-org
  namespace: api-org
  annotations:
    kubernetes.io/ingress.class: nginx
    #nginx.ingress.kubernetes.io/ssl-redirect: "false"
    #nginx.ingress.kubernetes.io/use-regex: "true"
    #nginx.ingress.kubernetes.io/rewrite-target: /$1
    #nginx.ingress.kubernetes.io/rewrite-target: /
#spec:
#  rules:
#  #- host: "*.foo.com"
#  #-  http:
#  - host: "ingress-api-org.btotest.com"
#    http:
#      paths:
#      #- pathType: Prefix
#      - pathType: ImplementationSpecific
#        path: "/"
#        backend:
#          service:
#            name: api-org-service
#            port:
#              number: 80
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - ingress-api-org.btotest.com
    secretName: ingress-tls-csi
  rules:
  - host: ingress-api-org.btotest.com
    http:
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: api-org-service
            port:
              number: 80
---
#########
## HPA ##
#########
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: api-org-hpa
  namespace: api-org
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api-org
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 90
  #- type: Pods
  #  pods:
  #    metric:
  #      name: packets-per-second
  #    target:
  #      type: AverageValue
  #      averageValue: 1k
  #- type: Object
  #  object:
  #    metric:
  #      name: requests-per-second
  #    describedObject:
  #      apiVersion: networking.k8s.io/v1
  #      kind: Ingress
  #      name: main-route
  #    target:
  #      type: Value
  #      value: 10k     