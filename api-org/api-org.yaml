###############
## NAMESPACE ##
###############
apiVersion: v1
kind: Namespace
metadata:
  name: api-org
---
################
## DEPLOYMENT ##
################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-org
  namespace: api-org
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api-org
  template:
    metadata:
      labels:
        app: api-org
    spec:
      containers:
      - name: api-org
        image: btoacrsea.azurecr.io/app/api-org:2023.03.31.10-main
        #image: stefanprodan/podinfo:latest
        #image: jmalloc/echo-server
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          name: http-pod
          protocol: TCP
        resources:
        #  limits:
        #    cpu: 200m
        #    memory: 100Mi
          requests:
            cpu: 50m
        #    memory: 50Mi
      tolerations:
        - key: "kubernetes.azure.com/scalesetpriority"
          operator: "Exists"
          effect: "NoSchedule"
---
#############
## SERVICE ##
#############
apiVersion: v1
kind: Service
metadata:
  name: api-org-service
  namespace: api-org
spec:
  type: ClusterIP
#  type: LoadBalancer
  ports:
    - name: http-service
      port: 80
      targetPort: http-pod
      protocol: TCP
  selector:
    app: api-org
  sessionAffinity: None
---
#############
## INGRESS ##
#############
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-org
  namespace: api-org
  annotations:
    kubernetes.io/ingress.class: nginx
    #nginx.ingress.kubernetes.io/ssl-redirect: "false"
    #nginx.ingress.kubernetes.io/use-regex: "true"
    #nginx.ingress.kubernetes.io/rewrite-target: /$1
    #nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  #- host: "*.foo.com"
  #-  http:
  - host: "ingress-api-org.btotest.com"
    http:
      paths:
      #- pathType: Prefix
      - pathType: ImplementationSpecific
        path: "/"
        backend:
          service:
            name: api-org-service
            port:
              number: 80
---
#########
## HPA ##
#########
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: api-org-hpa
  namespace: api-org
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api-org
  #minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 90
  #- type: Pods
  #  pods:
  #    metric:
  #      name: packets-per-second
  #    target:
  #      type: AverageValue
  #      averageValue: 1k
  #- type: Object
  #  object:
  #    metric:
  #      name: requests-per-second
  #    describedObject:
  #      apiVersion: networking.k8s.io/v1
  #      kind: Ingress
  #      name: main-route
  #    target:
  #      type: Value
  #      value: 10k
