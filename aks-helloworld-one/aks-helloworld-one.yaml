###############
## NAMESPACE ##
###############
apiVersion: v1
kind: Namespace
metadata:
  name: aks-helloworld-one
---
################
## DEPLOYMENT ##
################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aks-helloworld-one
  namespace: aks-helloworld-one
spec:
  replicas: 2
  selector:
    matchLabels:
      app: aks-helloworld-one
  template:
    metadata:
      labels:
        app: aks-helloworld-one
    spec:
      containers:
      - image: mcr.microsoft.com/azuredocs/aks-helloworld:v1
        imagePullPolicy: Always
        name: aks-helloworld-one
        ports:
        - containerPort: 80
          protocol: TCP
        env:
        - name: TITLE
          value: "Welcome to Azure Kubernetes Service (AKS)"        
        resources:
          limits:
            cpu: 200m
            memory: 100Mi
          requests:
            cpu: 20m
            memory: 20Mi
      #imagePullSecrets:
      #- name: acr-secret
      restartPolicy: Always            
      tolerations:
        - key: "kubernetes.azure.com/scalesetpriority"
          operator: "Exists"
          effect: "NoSchedule"      
---
#############
## SERVICE ##
#############
apiVersion: v1
kind: Service
metadata:
  name: aks-helloworld-one-service
  namespace: aks-helloworld-one
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    #targetPort: 8080
    protocol: TCP
  selector:
    app: aks-helloworld-one    
  sessionAffinity: None
---
#############
## INGRESS ##
#############
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress
  namespace: aks-helloworld-one
  annotations:
    kubernetes.io/ingress.class: nginx
    #nginx.ingress.kubernetes.io/ssl-redirect: "false"
    #nginx.ingress.kubernetes.io/use-regex: "true"
    #nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
  #- host: "*.foo.com"
  #-  http:
  - host: "ingress-aks1.btotest.com"
    http:
      paths:
      - pathType: ImplementationSpecific
        path: "/"
        backend:
          service:
            name: aks-helloworld-one-service
            port:
              number: 80
---
#########
## HPA ##
#########
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: aks-helloworld-one-hpa
  namespace: aks-helloworld-one
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: aks-helloworld-one
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50
  #- type: Pods
  #  pods:
  #    metric:
  #      name: packets-per-second
  #    target:
  #      type: AverageValue
  #      averageValue: 1k
  #- type: Object
  #  object:
  #    metric:
  #      name: requests-per-second
  #    describedObject:
  #      apiVersion: networking.k8s.io/v1
  #      kind: Ingress
  #      name: main-route
  #    target:
  #      type: Value
  #      value: 10k
